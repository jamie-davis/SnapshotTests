using System;

namespace SnapshotTests
{
    /// <summary>
    /// Implement this interface to provide a way to get a wall clock time that can be compared to timestamps in snapshots.
    /// You will not generally need to provide an implementation, but if your data contains timestamps sourced from a different
    /// system, such as a database, it may be useful to provide access to its current time. This would be important where the
    /// timestamps in the data have a lower accuracy than the .NET timestamp, or where the timestamps are allocated on another
    /// machine where its clock may not be synchronised with the machine running the test.
    /// <para/>
    /// This interface will not be hit frequently, so short delays in responding will not have a big impact. This can be useful if
    /// multiple clocks are involved. You must ensure that the time returned is guaranteed to be later than any timestamps previously
    /// allocated in the code under test, and earlier than any timestamps that will subsequently be generated by the code under test.
    /// <remarks>
    /// Snapshot access will be deliberately delayed until the clock time changes so that the "current time" cannot overlap
    /// between snapshots. For this reason it may be important to ensure that the same clock is used by the <see cref="SnapshotCollection"/>
    /// as is used to set timestamps in the data. All timestamp comparisons are performed in UTC.
    /// </remarks>
    /// </summary>
    public interface ITimeSource
    {
        DateTime GetUtcTime();
    }
}